const chaiHttp = require('chai-http');
const chai = require('chai');
let assert = chai.assert;
const server = require('../server');

chai.use(chaiHttp);

suite('Functional Tests', function() {

    suite('GET /api/convert => conversion object', function() {
      
        // 1. Convert 10L: GET request to /api/convert
        test('Convert 10L (valid input)', function(done) {
         chai.request(server)
          .get('/api/convert')
          .query({input: '10L'})
          .end(function(err, res){
            assert.equal(res.status, 200);
            assert.equal(res.body.initNum, 10);
            assert.equal(res.body.initUnit, 'L');
            assert.approximately(res.body.returnNum, 0.264172, 0.1);
            assert.equal(res.body.returnUnit, 'gal');
            done();
          });
        });
        
        // 2. 32g: GET request to /api/convert
        test('Convert 32g (invalid input unit)', function(done) {
            chai.request(server)
            .get('/api/convert')
            .query({input: '32g'})
            .end(function(err, res){
                assert.equal(res.status, 200);
                assert.equal(res.body.initNum, 10);
                assert.equal(res.body.initUnit, 'kg');
                assert.approximately(res.body.returnNum, 0.453592, 0.1);
                assert.equal(res.body.returnUnit, 'lbs');
                done();
          });
        });
        
        // 3. 3/7.2/4kg: GET request to /api/convert
        test('Convert 3/7.2/4kg (invalid number)', function(done) {
            chai.request(server)
            .get('/api/convert')
            .query({input: '3/7.2/4kg'})
            .end(function(err, res){
                assert.equal(res.status, 200);
                assert.equal(res.body.initNum, 10);
                assert.equal(res.body.initUnit, 'kg');
                assert.approximately(res.body.returnNum, 0.453592, 0.1);
                assert.equal(res.body.returnUnit, 'lbs');
                done();
          });
        });  
        
        // 4. 3/7.2/4kilomegagram: GET request to /api/convert
        test('Convert 3/7.2/4kilomegagram (invalid number and unit)', function(done) {
            chai.request(server)
            .get('/api/convert')
            .query({input: '3/7.2/4kilomegagram'})
            .end(function(err, res){
                assert.equal(res.status, 200);
                assert.equal(res.body.initNum, 10);
                assert.equal(res.body.initUnit, 'kg');
                assert.approximately(res.body.returnNum, 0.453592, 0.1);
                assert.equal(res.body.returnUnit, 'lbs');
                done();
          });            
        });
        
        // 5. kg: GET request to /api/convert
        test('Convert kg (no number)', function(done) {
            chai.request(server)
            .get('/api/convert')
            .query({input: 'kg'})
            .end(function(err, res){
                assert.equal(res.status, 200);
                assert.equal(res.body.initNum, 10);
                assert.equal(res.body.initUnit, 'kg');
                assert.approximately(res.body.returnNum, 0.453592, 0.1);
                assert.equal(res.body.returnUnit, 'lbs');
                done();
          }); 
        });
    });
});


